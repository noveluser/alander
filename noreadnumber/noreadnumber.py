#!/usr/bin/python
# coding=utf-8

import datetime
import cx_Oracle
import pymysql
import logging
import sys

logging.basicConfig(
                    level=logging.INFO, format='%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s',
                    datefmt='%Y-%m-%d %H:%M:%S',
                    # filename='/mnt/d/temp/temp/test/transfertxt.log',
                    filename='c://work//log//noread.log',
                    # filename='d://temp//temp//test//transfertxt.log',
                    filemode='a')


# init data
departure_RSO = [ "3113.19.99", "3113.23.99", "3113.29.99", "3114.29.99", "3114.35.99", "3114.41.99", "3114.51.99", "3114.55.99", "3114.61.99", "3117.03.99", "3117.05.99", "3117.11.98", "3117.15.99", "3117.39.99", "3117.47.99", "3117.53.97", "3118.03.98", "3118.07.99", "3118.13.99", "3118.31.99", "3118.37.99", "3118.43.97", "3143.23.99", "3143.27.99", "3144.29.99", "3144.37.99", "3144.43.99", "3144.49.99", "3144.53.99", "3144.57.99", "3144.61.99", "3147.03.98", "3147.07.99", "3147.33.99", "3147.47.97", "3148.03.99", "3148.05.99", "3148.11.98", "3148.15.99", "3148.21.99", "3148.39.99", "3148.51.97", "3148.53.99", "3205.25.99", "3205.29.99", "3205.37.99", "3205.41.99", "3205.43.99", "3205.49.99", "3205.51.99", "3245.27.99", "3245.35.99", "3245.43.99", "3245.47.99", "3245.49.99", "3245.57.99", "3245.59.99", "3245.65.99", "3201.03.98", "3201.03.99", "3201.07.99", "3241.17.99", "3241.21.99", "3241.27.99", "3241.31.99", "3241.35.99", "3242.17.99", "3242.21.99", "3242.23.99", "3242.29.99", "3242.35.99", "3242.39.99", "3242.41.99", "3111.61.99", "3111.65.99", "3111.71.99", "3111.77.99", "3111.81.99", "3111.87.99", "3111.97.99", "3111.01.99", "3111.09.99", "3111.15.99", "3111.19.99", "3111.23.99", "3111.29.99", "3111.33.99", "3111.39.99", "3111.45.99", "3111.49.99", "3111.55.99", "3112.61.99", "3112.63.99", "3112.69.99", "3112.73.99", "3112.79.99", "3112.81.99", "3112.88.99", "3112.90.99", "3112.96.99", "3112.01.99", "3112.97.99", "3112.09.99", "3112.17.99", "3112.19.99", "3112.27.99", "3112.29.99", "3112.37.99", "3112.39.99", "3112.47.99", "3112.51.99", "3131.23.99", "3131.27.99", "3131.33.99", "3131.51.99", "3131.09.99", "3131.03.99", "3132.03.99", "3132.13.99", "3132.07.99", "3132.17.99", "3133.03.99", "3133.13.99", "3133.17.99", "3133.39.97", "3133.39.99", "3133.07.99", "3134.13.99", "3134.17.99", "3134.03.99", "3134.07.99", "3135.17.99", "3135.13.99", "3135.03.99", "3135.07.99"]
arriver_RSO = ["3115.05.99", "3115.07.99", "3115.11.99", "3115.17.99", "3115.21.99", "3116.05.99", "3116.13.99", "3116.17.99", "3116.21.99", "3116.29.99", "3116.35.99", "3119.15.99", "3119.21.99", "3119.25.99", "3119.29.99", "3119.33.99", "3119.37.99", "3119.39.99", "3119.45.99", "3119.45.97", "3119.49.99", "3119.55.99", "3119.57.99", "3120.09.99", "3120.11.99", "3120.17.99", "3120.21.99", "3120.25.99", "3120.29.99", "3145.05.99", "3145.13.99", "3145.21.99", "3145.27.99", "3145.07.99", "3145.15.99", "3146.03.99", "3146.09.99", "3146.13.99", "3149.15.99", "3149.21.99", "3149.25.99", "3149.29.99", "3149.33.99", "3149.37.99", "3149.39.99", "3149.45.97", "3149.45.99", "3149.49.99", "3149.55.99", "3149.57.99", "3150.09.99", "3150.11.99", "3150.17.99", "3150.21.99", "3150.25.99", "3150.29.99", "3150.33.99", "3150.41.99", "3150.47.99", "3205.03.99", "3205.09.99", "3205.15.99", "3205.59.99", "3245.03.99", "3245.09.99", "3245.11.99", "3245.17.99", "3245.23.99", "3201.11.99", "3201.15.99", "3201.17.99", "3201.27.99", "3201.29.99", "3201.33.99", "3201.53.99", "3202.03.99", "3202.09.99", "3202.11.99", "3202.31.99", "3101.15.99", "3101.05.99", "3101.35.99", "3101.25.99", "3101.51.99", "3102.01.99", "3102.03.99", "3102.11.99", "3102.19.99", "3102.27.99", "3102.33.99", "3102.39.99", "3102.43.99", "3102.47.99", "3102.53.99", "3102.63.99", "3103.01.99", "3103.03.99", "3103.11.99", "3103.19.99", "3103.27.99", "3103.33.99", "3104.15.99", "3104.05.99", "3104.35.99", "3104.25.99", "3104.45.99", "3105.05.99", "3105.19.99", "3105.11.98", "3105.25.99", "3106.67.99", "3106.57.99", "3106.03.99", "3106.19.99", "3106.41.99", "3106.33.99", "3106.25.99", "3106.49.99", "3106.17.99", "3106.09.99", "3107.61.99", "3107.55.99", "3107.45.99", "3107.39.99", "3107.33.99", "3107.29.99", "3107.19.99", "3107.15.97", "3107.21.97", "3108.29.99", "3108.09.98", "3108.17.98", "3108.03.99", "3109.63.99", "3109.57.99", "3109.09.99", "3109.17.99", "3109.49.99", "3109.25.99", "3109.33.99", "3109.41.99", "3109.19.99", "3109.03.99", "3110.63.99", "3110.59.99", "3110.51.99", "3110.55.99", "3110.45.99", "3110.39.99", "3110.31.99", "3110.35.99", "3110.19.99", "3110.25.99", "3110.21.97", "3110.15.97"] 


# 打开数据库连接
# db = pymysql.connect(host='10.110.191.24',
db = pymysql.connect(host='10.31.9.24',
                     user='it',
                     password='1111111',
                     database='ics',
                     charset='utf8mb4')


def writeMysql(sql):
    # 使用 cursor() 方法创建一个游标对象 cursor
    cursor = db.cursor()
    try:
        # 执行sql语句
        cursor.execute(sql)
        # 提交到数据库执行
        db.commit()
    except Exception as e:
        # Rollback in case there is any error
        db.rollback()
        logging.error(e)


def main():
    currentTime = datetime.datetime.now()
    firstdayTime = currentTime - datetime.timedelta(days=2)
    firstday = firstdayTime.strftime("%d-%m-%Y")
    enddayTime = currentTime - datetime.timedelta(days=1)
    endday = enddayTime.strftime("%d-%m-%Y")
    departureNoreadNumber = 0
    arriverNoreadNumber = 0
    dsn_tns = cx_Oracle.makedsn('10.31.8.21', '1521', service_name='ORABPI')  # if needed, place an 'r' before any parameter in order to address special characters such as '\'.
    # dsn_tns = cx_Oracle.makedsn('10.110.190.21', '1521', service_name='ORABPI')  # if needed, place an 'r' before any parameter in order to address special characters such as '\'.
    conn = cx_Oracle.connect(user=r'owner_31_bpi_3_0', password='owner31bpi', dsn=dsn_tns)  # if needed, place an 'r' before any parameter in order to address special characters such as '\'. For example, if your user name contains '\', you'll need to place 'r' before the user name: user=r'User Name'
    c = conn.cursor()
    sqlquery = "select  areaid, ZONEID, EQUIPMENTID,eventts,icsevent from OWNER_31_BPI_3_0.wc_icsexceptiontrace where EVENTTS >= TO_TIMESTAMP('{} 16:00:00', 'DD-MM-YYYY HH24:MI:SS') and EVENTTS < TO_TIMESTAMP('{} 16:00:00', 'DD-MM-YYYY HH24:MI:SS') and  ICSEVENT = 'RFID-NOREAD' order by eventts".format(firstday, endday)
    c.execute(sqlquery)
    for row in c:
        rsoid = "{}.{}.{}".format(row[0], row[1], row[2])
        if rsoid in departure_RSO:
            departureNoreadNumber += 1
        else:
            arriverNoreadNumber += 1
    sqlquery = "insert into ics.noread (date, departureNumber, arriverNumber) values ('{}',{},{})".format(endday, departureNoreadNumber, arriverNoreadNumber)
    writeMysql(sqlquery)
    db.close()


if __name__ == '__main__':
    main()
